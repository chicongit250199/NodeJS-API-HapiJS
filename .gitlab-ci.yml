cache:
  key: '$CI_BUILD_REF_NAME node:8-alpine'
  paths:
    - node_modules/

stages:
  - test
  - release
  - deploy

eslint-test:
  stage: test
  image: node:8-alpine
  only:
    - deploy
  before_script:
    - rm -rf /tmp/*
    - npm i --no-cache
  script:
    - npm run lint

docker-release:
  stage: release
  image: docker:latest
  only:
    - deploy
  services:
    - docker:dind
  variables:
    DOCKER_DRIVER: overlay2
  before_script:
    - docker version
    - docker info
    - 'docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY'
  script:
    - 'docker build -t ${CI_REGISTRY}/${CI_PROJECT_PATH}:latest --pull . --force-rm'
    - 'docker push ${CI_REGISTRY}/${CI_PROJECT_PATH}:latest'
  after_script:
    - 'docker logout ${CI_REGISTRY}'

docker-deploy:
  stage: deploy
  image: gitlab/dind:latest
  only:
    - deploy
  environment: development
  services:
    - docker:dind
  before_script:
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - eval "$(ssh-agent -s)"
    - ssh-add ~/.ssh/id_rsa
    - ssh-keyscan -H $DEPLOYMENT_SERVER_IP >> ~/.ssh/known_hosts
  script:
    - printf "NODE_ENV=development\nAPP_PORT=8080\n" > environment.env
    - scp -r ./environment.env ./compose/docker-compose.yml root@${DEPLOYMENT_SERVER_IP}:~/
    - ssh root@$DEPLOYMENT_SERVER_IP "docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}; docker-compose -f docker-compose.yml stop; docker-compose -f docker-compose.yml rm --f node; docker pull ${CI_REGISTRY}/${CI_PROJECT_PATH}:latest; docker-compose -f docker-compose.yml up -d; docker logout ${CI_REGISTRY}"
